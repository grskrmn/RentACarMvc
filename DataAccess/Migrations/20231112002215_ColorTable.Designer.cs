// <auto-generated />
using System;
using DataAccess.Concrete.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(RentACarDbContext))]
    [Migration("20231112002215_ColorTable")]
    partial class ColorTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entities.Concrete.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 11, 8, 0, 22, 15, 817, DateTimeKind.Utc).AddTicks(4353),
                            Name = "Togg"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 11, 9, 0, 22, 15, 817, DateTimeKind.Utc).AddTicks(4365),
                            Name = "Ford"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 11, 10, 0, 22, 15, 817, DateTimeKind.Utc).AddTicks(4367),
                            Name = "Mercedes"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 11, 12, 0, 22, 15, 817, DateTimeKind.Utc).AddTicks(6582),
                            Name = "Mavi"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 11, 10, 0, 22, 15, 817, DateTimeKind.Utc).AddTicks(6585),
                            Name = "Kırmızı"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 11, 12, 0, 22, 15, 817, DateTimeKind.Utc).AddTicks(6588),
                            Name = "Beyaz"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 11, 11, 0, 22, 15, 817, DateTimeKind.Utc).AddTicks(6590),
                            Name = "Siyah"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
